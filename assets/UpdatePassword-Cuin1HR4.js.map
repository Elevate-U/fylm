{"version":3,"file":"UpdatePassword-Cuin1HR4.js","sources":["../../src/pages/UpdatePassword.jsx"],"sourcesContent":["import { useState, useEffect } from 'preact/hooks';\nimport { route } from 'preact-router';\nimport { supabase } from '../supabase';\nimport toast from '../components/Toast';\nimport './Auth.css';\n\nexport default function UpdatePassword() {\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      if (!session) {\n        toast.error(\"You must be logged in to update your password.\");\n        route('/login', true);\n      } else {\n        setSession(session);\n      }\n    });\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      if (_event === 'PASSWORD_RECOVERY') {\n        // This event is triggered after the user clicks the password recovery link\n        // You might want to handle this case specifically if needed\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const handleUpdatePassword = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    \n    if (password.length < 6) {\n        setError(\"Password must be at least 6 characters long.\");\n        return;\n    }\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.updateUser({ password: password });\n\n      if (error) throw error;\n      \n      toast.success('Password updated successfully!');\n      route('/', true);\n    } catch (error) {\n      setError(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form\">\n        <h1 className=\"auth-header\">Update Password</h1>\n        <p className=\"description\">Enter a new password for your account.</p>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n\n        <form onSubmit={handleUpdatePassword}>\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">New Password</label>\n            <input\n              id=\"password\"\n              className=\"input-field\"\n              type=\"password\"\n              placeholder=\"Your new password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"confirm-password\">Confirm New Password</label>\n            <input\n              id=\"confirm-password\"\n              className=\"input-field\"\n              type=\"password\"\n              placeholder=\"Confirm your new password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <button className=\"button\" disabled={loading}>\n              {loading ? <span>Updating...</span> : <span>Update Password</span>}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} "],"names":["UpdatePassword","loading","setLoading","useState","password","setPassword","confirmPassword","setConfirmPassword","error","setError","session","setSession","useEffect","supabase","toast","route","subscription","_event","jsxs","jsx","e"],"mappings":"8IAMA,SAAwBA,GAAiB,CACvC,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAS,EAAK,EACtC,CAACC,EAAUC,CAAW,EAAIF,EAAS,EAAE,EACrC,CAACG,EAAiBC,CAAkB,EAAIJ,EAAS,EAAE,EACnD,CAACK,EAAOC,CAAQ,EAAIN,EAAS,EAAE,EAC/B,CAACO,EAASC,CAAU,EAAIR,EAAS,IAAI,EAE3CS,OAAAA,EAAU,IAAM,CACdC,EAAS,KAAK,WAAA,EAAa,KAAK,CAAC,CAAE,KAAM,CAAE,QAAAH,CAAAA,KAAgB,CACpDA,EAIHC,EAAWD,CAAO,GAHlBI,EAAM,MAAM,gDAAgD,EAC5DC,EAAM,SAAU,EAAI,EAIxB,CAAC,EAED,KAAM,CAAE,KAAM,CAAE,aAAAC,EAAa,EAAMH,EAAS,KAAK,kBAAkB,CAACI,EAAQP,IAAY,CACtFC,EAAWD,CAAO,CAKpB,CAAC,EAED,MAAO,IAAMM,EAAa,YAAA,CAC5B,EAAG,CAAA,CAAE,IAgCF,MAAA,CAAI,UAAU,iBACb,SAAAE,EAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAC,KAAA,CAAG,UAAU,cAAc,SAAA,kBAAe,EAC3CA,EAAC,IAAA,CAAE,UAAU,cAAc,SAAA,yCAAsC,EAEhEX,GAASW,EAAC,MAAA,CAAI,UAAU,gBAAiB,SAAAX,EAAM,EAEhDU,EAAC,OAAA,CAAK,SArCiB,MAAOE,GAAM,CAIxC,GAHAA,EAAE,eAAA,EACFX,EAAS,EAAE,EAEPL,IAAaE,EAAiB,CAChCG,EAAS,yBAAyB,EAClC,MACF,CAEA,GAAIL,EAAS,OAAS,EAAG,CACrBK,EAAS,8CAA8C,EACvD,MACJ,CAEA,GAAI,CACFP,EAAW,EAAI,EACf,KAAM,CAAE,MAAAM,GAAU,MAAMK,EAAS,KAAK,WAAW,CAAE,SAAAT,EAAoB,EAEvE,GAAII,EAAO,MAAMA,EAEjBM,EAAM,QAAQ,gCAAgC,EAC9CC,EAAM,IAAK,EAAI,CACjB,OAASP,EAAO,CACdC,EAASD,EAAM,mBAAqBA,EAAM,OAAO,CACnD,QAAA,CACEN,EAAW,EAAK,CAClB,CACF,EAWQ,SAAA,CAAAgB,EAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAC,QAAA,CAAM,QAAQ,WAAW,SAAA,eAAY,EACtCA,EAAC,QAAA,CACC,GAAG,WACH,UAAU,cACV,KAAK,WACL,YAAY,oBACZ,MAAOf,EACP,SAAWgB,GAAMf,EAAYe,EAAE,OAAO,KAAK,EAC3C,SAAQ,EAAA,CAAA,CACV,EACF,EACAF,EAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAC,QAAA,CAAM,QAAQ,mBAAmB,SAAA,uBAAoB,EACtDA,EAAC,QAAA,CACC,GAAG,mBACH,UAAU,cACV,KAAK,WACL,YAAY,4BACZ,MAAOb,EACP,SAAWc,GAAMb,EAAmBa,EAAE,OAAO,KAAK,EAClD,SAAQ,EAAA,CAAA,CACV,EACF,IACC,MAAA,CACC,SAAAD,EAAC,SAAA,CAAO,UAAU,SAAS,SAAUlB,EAClC,SAAAA,EAAUkB,EAAC,QAAK,SAAA,aAAA,CAAW,IAAW,OAAA,CAAK,SAAA,iBAAA,CAAe,EAC7D,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}