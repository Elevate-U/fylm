{"version":3,"file":"ForgotPassword-AX2kuwfO.js","sources":["../../src/pages/ForgotPassword.jsx"],"sourcesContent":["import { useState } from 'preact/hooks';\nimport { supabase } from '../supabase';\nimport toast from '../components/Toast';\nimport './Auth.css';\n\nexport default function ForgotPassword() {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/update-password`,\n      });\n\n      if (error) throw error;\n      \n      toast.success('Password reset link sent! Please check your email.');\n    } catch (error) {\n      toast.error(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form\">\n        <h1 className=\"auth-header\">Forgot Password</h1>\n        <p className=\"description\">\n          Enter your email and we'll send you a link to reset your password.\n        </p>\n        <form onSubmit={handlePasswordReset}>\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              className=\"input-field\"\n              type=\"email\"\n              placeholder=\"Your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <button className=\"button\" disabled={loading}>\n              {loading ? <span>Sending...</span> : <span>Send Reset Link</span>}\n            </button>\n          </div>\n        </form>\n        <div className=\"auth-links\">\n          <a href=\"/login\" className=\"auth-link\">\n            Remembered your password? <span>Log in</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["ForgotPassword","loading","setLoading","useState","email","setEmail","jsxs","jsx","e","error","supabase","toast"],"mappings":"gIAKA,SAAwBA,GAAiB,CACvC,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAS,EAAK,EACtC,CAACC,EAAOC,CAAQ,EAAIF,EAAS,EAAE,EAqBrC,SACG,MAAA,CAAI,UAAU,iBACb,SAAAG,EAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,EAAC,KAAA,CAAG,UAAU,cAAc,SAAA,kBAAe,EAC3CA,EAAC,IAAA,CAAE,UAAU,cAAc,SAAA,qEAE3B,EACAD,EAAC,OAAA,CAAK,SA1BgB,MAAOE,GAAM,CACvCA,EAAE,eAAA,EAEF,GAAI,CACFN,EAAW,EAAI,EACf,KAAM,CAAE,MAAAO,CAAA,EAAU,MAAMC,EAAS,KAAK,sBAAsBN,EAAO,CACjE,WAAY,GAAG,OAAO,SAAS,MAAM,kBAAA,CACtC,EAED,GAAIK,EAAO,MAAMA,EAEjBE,EAAM,QAAQ,oDAAoD,CACpE,OAASF,EAAO,CACdE,EAAM,MAAMF,EAAM,mBAAqBA,EAAM,OAAO,CACtD,QAAA,CACEP,EAAW,EAAK,CAClB,CACF,EAUQ,SAAA,CAAAI,EAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAC,QAAA,CAAM,QAAQ,QAAQ,SAAA,QAAK,EAC5BA,EAAC,QAAA,CACC,GAAG,QACH,UAAU,cACV,KAAK,QACL,YAAY,aACZ,MAAOH,EACP,SAAWI,GAAMH,EAASG,EAAE,OAAO,KAAK,EACxC,SAAQ,EAAA,CAAA,CACV,EACF,IACC,MAAA,CACC,SAAAD,EAAC,SAAA,CAAO,UAAU,SAAS,SAAUN,EAClC,SAAAA,EAAUM,EAAC,QAAK,SAAA,YAAA,CAAU,IAAW,OAAA,CAAK,SAAA,iBAAA,CAAe,EAC5D,CAAA,CACF,CAAA,EACF,EACAA,EAAC,OAAI,UAAU,aACb,WAAC,IAAA,CAAE,KAAK,SAAS,UAAU,YAAY,SAAA,CAAA,6BACXA,EAAC,QAAK,SAAA,QAAA,CAAM,CAAA,CAAA,CACxC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}