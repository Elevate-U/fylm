{"version":3,"file":"BlogPost-e9df8jYI.js","sources":["../../src/pages/BlogPost.jsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { Link, route } from 'preact-router';\nimport { BlogAPI } from '../utils/blogApi';\nimport { updatePageTitle, updateMetaDescription, updateOpenGraphTags, addStructuredData, updateCanonicalUrl } from '../utils/seoUtils';\nimport { useAuth } from '../context/Auth';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport Header from '../components/Header';\nimport './BlogPost.css';\n\nconst BlogPost = ({ slug }) => {\n    const [post, setPost] = useState(null);\n    const [relatedPosts, setRelatedPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const { user } = useAuth();\n\n    useEffect(() => {\n        if (slug) {\n            loadPost();\n        }\n    }, [slug]);\n\n    // Check admin status when user changes\n    useEffect(() => {\n        const checkAdminStatus = async () => {\n            if (user) {\n                try {\n                    const adminStatus = await BlogAPI.isAdmin();\n                    setIsAdmin(adminStatus);\n                } catch (error) {\n                    console.error('Error checking admin status:', error);\n                    setIsAdmin(false);\n                }\n            } else {\n                setIsAdmin(false);\n            }\n        };\n        \n        checkAdminStatus();\n    }, [user]);\n\n    const loadPost = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Fetch the blog post\n            const postData = await BlogAPI.getPostBySlug(slug);\n            \n            if (!postData) {\n                setError('Blog post not found');\n                return;\n            }\n\n            setPost(postData);\n\n            // Update SEO\n            updateSEO(postData);\n\n            // Fetch related posts\n            const related = await BlogAPI.getRelatedPosts(\n                postData.id,\n                postData.category_id,\n                postData.tags,\n                3\n            );\n            setRelatedPosts(related);\n\n        } catch (err) {\n            console.error('Error loading blog post:', err);\n            setError('Failed to load blog post');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const updateSEO = (postData) => {\n        // Update page title\n        const title = postData.meta_title || `${postData.title} | Fylm Blog`;\n        updatePageTitle(title);\n\n        // Update meta description\n        const description = postData.meta_description || postData.excerpt || \n            `Read ${postData.title} on Fylm Blog. ${postData.category_name} content and more.`;\n        updateMetaDescription(description);\n\n        // Update Open Graph tags\n        updateOpenGraphTags({\n            title: postData.title,\n            description: description,\n            image: postData.featured_image_url || '/android-chrome-512x512.png',\n            type: 'article',\n            url: window.location.href\n        });\n\n        // Update canonical URL\n        updateCanonicalUrl(window.location.href);\n\n        // Add structured data for article\n        addStructuredData({\n            '@context': 'https://schema.org',\n            '@type': 'BlogPosting',\n            'headline': postData.title,\n            'description': description,\n            'image': postData.featured_image_url || '/android-chrome-512x512.png',\n            'author': {\n                '@type': 'Person',\n                'name': 'Fylm Editorial Team'\n            },\n            'publisher': {\n                '@type': 'Organization',\n                'name': 'Fylm',\n                'logo': {\n                    '@type': 'ImageObject',\n                    'url': '/android-chrome-512x512.png'\n                }\n            },\n            'datePublished': postData.published_at,\n            'dateModified': postData.updated_at || postData.published_at,\n            'mainEntityOfPage': {\n                '@type': 'WebPage',\n                '@id': window.location.href\n            },\n            'articleSection': postData.category_name,\n            'keywords': postData.tags?.join(', ') || '',\n            'wordCount': postData.content ? postData.content.replace(/<[^>]*>/g, '').split(' ').length : 0,\n            'timeRequired': `PT${postData.read_time || 5}M`\n        });\n    };\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        });\n    };\n\n    const formatContent = (content) => {\n        // Basic content formatting and fix hash-based links\n        let formattedContent = content\n            .replace(/\\n\\n/g, '</p><p>')\n            .replace(/\\n/g, '<br>')\n            .replace(/^/, '<p>')\n            .replace(/$/, '</p>');\n        \n        // Fix hash-based links to be absolute from root\n        // Handle links that start with /movie/ or /tv/ and make them hash-based for SPA routing\n        formattedContent = formattedContent.replace(\n            /href=\"\\/movie\\//g, \n            'href=\"/#/movie/'\n        ).replace(\n            /href=\"\\/tv\\//g,\n            'href=\"/#/tv/'\n        ).replace(\n            /href=\"#\\//g, \n            'href=\"/#/'\n        ).replace(\n            /href=\"\\/#\\/#\\//g,\n            'href=\"/#/'\n        );\n        \n        return formattedContent;\n    };\n\n    if (loading) {\n        return (\n            <>\n                <Header />\n                <main class=\"container blog-post-page\">\n                    <LoadingSpinner />\n                </main>\n            </>\n        );\n    }\n\n    if (error || !post) {\n        return (\n            <>\n                <Header />\n                <main class=\"container blog-post-page\">\n                    <div class=\"error-message\">\n                        <h1>Post Not Found</h1>\n                        <p>{error || 'The blog post you are looking for does not exist.'}</p>\n                        <Link href=\"/blog\" class=\"back-to-blog-btn\">\n                            ← Back to Blog\n                        </Link>\n                    </div>\n                </main>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Header />\n            \n            {/* Hero Section - Medium Style */}\n            <div class=\"blog-hero\">\n                <div class=\"hero-content\">\n                    {/* Breadcrumb Navigation */}\n                    <nav class=\"breadcrumb\">\n                        <Link href=\"/\">Home</Link>\n                        <span class=\"separator\">›</span>\n                        <Link href=\"/blog\">Blog</Link>\n                        {post.category_name && (\n                            <>\n                                <span class=\"separator\">›</span>\n                                <Link href={`/blog?category=${post.category_slug}`}>\n                                    {post.category_name}\n                                </Link>\n                            </>\n                        )}\n                    </nav>\n\n                    {post.category_name && (\n                        <div class=\"post-category\" style={`background-color: ${post.category_color}`}>\n                            {post.category_name}\n                        </div>\n                    )}\n                    \n                    <h1 class=\"hero-title\">{post.title}</h1>\n                    \n                    {post.excerpt && (\n                        <div class=\"hero-excerpt\">\n                            {post.excerpt}\n                        </div>\n                    )}\n                    \n                    <div class=\"hero-meta\">\n                        <div class=\"meta-left\">\n                            <time class=\"post-date\" dateTime={post.published_at}>\n                                {formatDate(post.published_at)}\n                            </time>\n                            <span class=\"separator\">•</span>\n                            <span class=\"post-read-time\">{post.read_time} min read</span>\n                            <span class=\"separator\">•</span>\n                            <span class=\"post-views\">{post.view_count} views</span>\n                        </div>\n                        {isAdmin && (\n                            <div class=\"meta-right\">\n                                <button \n                                    class=\"edit-post-btn\"\n                                    onClick={() => route(`/blog/admin?edit=${post.id}`)}\n                                    title=\"Edit this post\"\n                                >\n                                    ✏️ Edit Post\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n\n            {/* Main Content */}\n            <main class=\"blog-post-main\">\n                <article class=\"blog-post-article\">\n                    {/* Featured Image */}\n                    {post.featured_image_url && (\n                        <div class=\"post-featured-image\">\n                            <img \n                                src={post.featured_image_url} \n                                alt={post.title}\n                                loading=\"lazy\"\n                            />\n                        </div>\n                    )}\n\n                    {/* Post Content */}\n                    <div class=\"post-content\">\n                        <div \n                            class=\"content-body\"\n                            dangerouslySetInnerHTML={{ __html: formatContent(post.content) }}\n                        />\n                    </div>\n\n                    {/* Post Tags */}\n                    {post.tags && post.tags.length > 0 && (\n                        <div class=\"post-tags\">\n                            <div class=\"tags-list\">\n                                {post.tags.map(tag => (\n                                    <span key={tag} class=\"tag\">\n                                        #{tag.replace(' ', '')}\n                                    </span>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Social Sharing */}\n                    <div class=\"post-sharing\">\n                        <div class=\"sharing-buttons\">\n                            <a \n                                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(window.location.href)}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                class=\"share-btn twitter\"\n                            >\n                                Share on Twitter\n                            </a>\n                            <a \n                                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                class=\"share-btn facebook\"\n                            >\n                                Share on Facebook\n                            </a>\n                            <button \n                                class=\"share-btn copy-link\"\n                                onClick={() => {\n                                    navigator.clipboard.writeText(window.location.href);\n                                    // You could add a toast notification here\n                                }}\n                            >\n                                Copy Link\n                            </button>\n                        </div>\n                    </div>\n                </article>\n\n            {/* Related Posts */}\n            {relatedPosts.length > 0 && (\n                <section class=\"related-posts\">\n                    <h2>Related Posts</h2>\n                    <div class=\"related-posts-grid\">\n                        {relatedPosts.map(relatedPost => (\n                            <article key={relatedPost.id} class=\"related-post-card\">\n                                {relatedPost.featured_image_url && (\n                                    <div class=\"related-post-image\">\n                                        <img \n                                            src={relatedPost.featured_image_url} \n                                            alt={relatedPost.title}\n                                            loading=\"lazy\"\n                                        />\n                                    </div>\n                                )}\n                                <div class=\"related-post-content\">\n                                    {relatedPost.blog_categories && (\n                                        <div \n                                            class=\"related-post-category\"\n                                            style={`background-color: ${relatedPost.blog_categories.color}`}\n                                        >\n                                            {relatedPost.blog_categories.name}\n                                        </div>\n                                    )}\n                                    <h3 class=\"related-post-title\">\n                                        <Link href={`/blog/${relatedPost.slug}`}>\n                                            {relatedPost.title}\n                                        </Link>\n                                    </h3>\n                                    {relatedPost.excerpt && (\n                                        <p class=\"related-post-excerpt\">\n                                            {relatedPost.excerpt}\n                                        </p>\n                                    )}\n                                    <div class=\"related-post-meta\">\n                                        <time dateTime={relatedPost.published_at}>\n                                            {formatDate(relatedPost.published_at)}\n                                        </time>\n                                        <span>{relatedPost.read_time} min read</span>\n                                    </div>\n                                </div>\n                            </article>\n                        ))}\n                    </div>\n                </section>\n            )}\n\n                {/* Navigation */}\n                <div class=\"post-navigation\">\n                    <Link href=\"/blog\" class=\"back-to-blog-btn\">\n                        ← Back to Blog\n                    </Link>\n                </div>\n            </main>\n        </>\n    );\n};\n\nexport default BlogPost;"],"names":["BlogPost","slug","post","setPost","useState","relatedPosts","setRelatedPosts","loading","setLoading","error","setError","isAdmin","setIsAdmin","user","useAuth","useEffect","loadPost","adminStatus","BlogAPI","postData","updateSEO","related","err","title","updatePageTitle","description","updateMetaDescription","updateOpenGraphTags","updateCanonicalUrl","addStructuredData","formatDate","dateString","formatContent","content","formattedContent","jsxs","Fragment","jsx","Header","LoadingSpinner","Link","route","tag","relatedPost"],"mappings":"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"}